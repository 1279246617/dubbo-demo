使用Spring AOP对异常进行拦截，将异常的处理逻辑和正常的处理逻辑进行解耦


service工程
只会抛ServiceException 和 dubbo框架服务异常

异常来源
1.手工抛业务check异常(ServiceException)
2.AOP捕获RuntimeException 转为(ServiceException)
3.dubbo服务框架异常



web工程aop
1.aop捕获ServiceException 按业务异常处理,返回业务异常Result 
2.aop捕获RuntionException 按业务系统处理,返回系统异常Result



























dubbo的异常处理类是com.alibaba.dubbo.rpc.filter.ExceptionFilter 类,源码这里就不贴了.归纳下对异常的处理分为下面几类:
1)如果provider实现了GenericService接口,直接抛出
2)如果是checked异常，直接抛出
3)在方法签名上有声明，直接抛出
4)异常类和接口类在同一jar包里，直接抛出
5)是JDK自带的异常，直接抛出
6)是Dubbo本身的异常，直接抛出
7)否则，包装成RuntimeException抛给客户端
网上有些文章对7)的处理有疑问,不理解原因,其实就是为了防止客户端反序列化失败.前面几种情况都能保证反序列化正常.