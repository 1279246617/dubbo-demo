Dubbo服务容错配置-集群容错模式

集群调用失败时，Dubbo提供了多种容错方案，缺省为failover重试。

引发问题可能导致一个操作被多个后端服务实例执行

解决方法：

查询接口配置retries="2" 
更新接口配置retries="0"

retries配置在什么地方？
服务提供者：@Service 服务消费者：@Reference 均可配置 


扩展话:将来使用nginx做http请求层面的负载均衡时,关闭超时重试功能或者代码层面做处理
(nginx:关闭超时重试:将proxy_next_upstream配置为off)

























更多配置模式请搜索 “dubbo集群容错”


标签:
<dubbo:service>提供方配置标签，粒度粗
例:<!-- 当ProtocolConfig和ServiceConfig某属性没有配置时,采用此缺省值 -->
<dubbo:provider timeout="30000" threadpool="fixed" threads="100" accepts="1000" />

<dubbo:service>:服务发布标签,例，在这个上配置容错，粒度细
<!-- 提供服务接口 -->
<dubbo:service retries="0" interface="edu.pay.facade.trade.service.PaymentFacade" ref="paymentFacade" />

<dubbo:consumer>消费端标签,应用单个消费端配置,粒度粗
例:<dubbo:consumer timeout="8000" retries="0" />

在这个上配置容错，粒度细
<dubbo:reference >
<!-- 调用账户服务 -->
<dubbo:reference interface="edu.pay.facade.account.service.AccountTransactionFacade" id="accountTransactionFacade" check="false" />


属性：cluster 类型：string


是否必填：可选 缺省值：failover


作用：性能调优 集群方式：可选：failover/failfast/failsafe/failback/forking
1、Failover Cluster
失败自动切换，当出现失败，重试其它服务器。(缺省) 通常用于读操作，但重试会带来更长延迟。 可通过retries="2"来设置重试次数(不含第一次)。
<dubbo:service retries="2" />
或：
<dubbo:reference retries="2" />


或：
<dubbo:reference>
<dubbo:method name="findFoo" retries="2" /> </dubbo:reference>
2、Failfast Cluster
快速失败，只发起一次调用，失败立即报错。 通常用于非幂等性的写操作，比如新增记录。
<dubbo:service cluster="failfast" />
或：
<dubbo:reference cluster="failfast" />
3.Failsafe Cluster
失败安全，出现异常时,直接忽略，通常 用于写入审计日志等操作
<dubbo:service cluster="failsafe"/>或者
<dubbo:reference cluster="failsafe"/>
4.Failback Cluster
失败自动恢复，后台记录失败请求，定时重发，通常用于消息通知操作。
<dubbo:service cluster="failback"/>
或
<dubbo:reference cluster="failback"/>

5.Forking Cluster
并行调用多个服务,只要一个成功即返回,通常用于实时要求较高的读操作，但需要浪费更多的服务器资源。可通过forks="2"来设置最大并发数。
<dubbo:service cluster="forking">
或
<dubbo:reference cluster="forking"/>









