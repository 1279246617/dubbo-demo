<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- 启动spring注解扫描 -->
	<context:annotation-config />

	
	<!-- 基于JDK动态代理 ，可以将@注解放置在接口和具体类上。 -->
	<!-- 基于CGLIB类代理，只能将@注解放置在具体类上。 -->
	<!-- CGLIB动态代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 引入properties配置文件 -->
	<context:property-placeholder location="classpath*:jdbc.properties,classpath*:service.properties,classpath*:dubbo.properties" ignore-unresolvable="true" />

	<!-- aop start -->
	
	<!-- 异常处理 -->
	<bean class="com.coe.fcs.common.aspect.ServiceExceptionAspect" />
	
	<!-- 数据源主从切换控制 -->
	<!-- <bean class="com.coe.fcs.common.core.db.DataSourceAspect" /> -->
	
	<!-- redis缓存 -->
	<bean class="com.coe.fcs.common.core.cache.CacheAspect" />
	
	<!-- aop end -->
	
	<!-- dubbo配置 -->
	<import resource="classpath:spring/spring-dubbo-provider.xml" />
	<!-- mybatis -->
	<import resource="classpath:spring/spring-mybatis.xml" />

</beans>