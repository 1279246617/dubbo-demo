<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.coe.wms.service.symgmt.mapper.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.coe.wms.facade.symgmt.entity.Admin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="BIGINT" />
    <result column="created_by_admin_id" property="createdByAdminId" jdbcType="BIGINT" />
    <result column="last_updated_time" property="lastUpdatedTime" jdbcType="BIGINT" />
    <result column="lasts_updated_by_admin_id" property="lastsUpdatedByAdminId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Condition_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_name, login_name, password, status, created_time, created_by_admin_id, last_updated_time, 
    lasts_updated_by_admin_id
  </sql>
  <select id="selectByConditionList" resultMap="BaseResultMap" parameterType="com.coe.wms.facade.symgmt.entity.AdminCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_admin
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit>0" >
      limit ${start} , ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from u_admin
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from u_admin
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCondition" parameterType="com.coe.wms.facade.symgmt.entity.AdminCriteria" >
    delete from u_admin
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.coe.wms.facade.symgmt.entity.Admin" >
    insert into u_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdByAdminId != null" >
        created_by_admin_id,
      </if>
      <if test="lastUpdatedTime != null" >
        last_updated_time,
      </if>
      <if test="lastsUpdatedByAdminId != null" >
        lasts_updated_by_admin_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="createdByAdminId != null" >
        #{createdByAdminId,jdbcType=BIGINT},
      </if>
      <if test="lastUpdatedTime != null" >
        #{lastUpdatedTime,jdbcType=BIGINT},
      </if>
      <if test="lastsUpdatedByAdminId != null" >
        #{lastsUpdatedByAdminId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="com.coe.wms.facade.symgmt.entity.AdminCriteria" resultType="java.lang.Integer" >
    select count(*) from u_admin
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.coe.wms.facade.symgmt.entity.Admin" >
    update u_admin
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="createdByAdminId != null" >
        created_by_admin_id = #{createdByAdminId,jdbcType=BIGINT},
      </if>
      <if test="lastUpdatedTime != null" >
        last_updated_time = #{lastUpdatedTime,jdbcType=BIGINT},
      </if>
      <if test="lastsUpdatedByAdminId != null" >
        lasts_updated_by_admin_id = #{lastsUpdatedByAdminId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>