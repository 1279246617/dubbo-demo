if (tradeDetail == null) {
			response.setReason(ErrorCode.S01_CODE);
			response.setReasonDesc("EventBody对象获取TradeDetail对象的得到Null");
			return XmlUtil.toXml(Responses.class, responses);
		}
		List<TradeOrder> tradeOrders = tradeDetail.getTradeOrders();
		if (tradeOrders == null) {
			response.setReason(ErrorCode.S01_CODE);
			response.setReasonDesc("TradeDetail对象获取tradeOrders对象的得到Null");
			return XmlUtil.toXml(Responses.class, responses);
		}

		// 保存入库
		for (int i = 0; i < tradeOrders.size(); i++) {
			TradeOrder tradeOrder = tradeOrders.get(i);
			logger.info("出库订单:第" + (i + 1) + "(tradeOrderId):" + tradeOrder.getTradeOrderId());
			Buyer buyer = tradeOrder.getBuyer();
			if (buyer == null) {
				throw new ServiceException("买家(buyer)信息为空,订单出库失败");
			}
			if (StringUtil.isNull(tradeOrder.getTradeOrderId())) {
				throw new ServiceException("交易订单id(tradeOrderId)为空,订单出库失败");
			}
			// 主单
			OutWarehouseOrder outWarehouseOrder = new OutWarehouseOrder();
			outWarehouseOrder.setCreatedTime(System.currentTimeMillis());
			outWarehouseOrder.setRemark(tradeOrder.getTradeRemark());
			outWarehouseOrder.setStatus(OurWareHouseStatusCode.DRAFT);

			// 收件人
			OutWarehouseOrderReceiver outWarehouseOrderReceiver = new OutWarehouseOrderReceiver();
			outWarehouseOrderReceiver.setAddressLine1(buyer.getStreetAddress());
			outWarehouseOrderReceiver.setCity(buyer.getCity());
			outWarehouseOrderReceiver.setCountryCode(OutWarehouseOrderReceiver.CN);
			outWarehouseOrderReceiver.setCountryName(OutWarehouseOrderReceiver.CN_VALUE);
			outWarehouseOrderReceiver.setCounty(buyer.getDistrict());
			outWarehouseOrderReceiver.setEmail(buyer.getEmail());
			outWarehouseOrderReceiver.setName(buyer.getName());
			outWarehouseOrderReceiver.setPhoneNumber(buyer.getPhone());
			outWarehouseOrderReceiver.setPostalCode(buyer.getZipCode());
			outWarehouseOrderReceiver.setStateOrProvince(buyer.getProvince());
			outWarehouseOrderReceiver.setMobileNumber(buyer.getMobile());

			// 物品信息
			List<Item> items = tradeOrder.getItems();
			for (int j = 0; j < items.size(); j++) {
				OutWarehouseOrderItem outWarehouseOrderItem = new OutWarehouseOrderItem();
				Item item = items.get(j);
				outWarehouseOrderItem.setQuantity(item.getItemQuantity());
				outWarehouseOrderItem.setRemark(item.getItemRemark());
				outWarehouseOrderItem.setSku(item.getItemName());

			}

			OutWarehouseOrderSender outWarehouseOrderSender = new OutWarehouseOrderSender();

		}